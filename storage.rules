rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Allow read/write access to the owner for their aircraftImages
    match /aircraftImages/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow read/write access to the owner for their aircraftDetails
    match /aircraftDetails/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Existing rules (adjust as needed)
    
    // Allow read/write access to all authenticated users for airplane images
    match /airplaneImages/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow read/write access to all authenticated users for airplane listings
    match /airplane_listings/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow read/write access to all authenticated users for classified images
    match /classifiedImages/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    // Allow read/write access to all authenticated users for documents
    match /documents/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow public read access to post images
    match /postImages/{allPaths=**} {
      allow read: if true; // Public read access
      allow write: if request.auth != null; // Authenticated users can write
    }
    
    // Allow read/write access to all authenticated users for profile images
    match /profileImages/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}

